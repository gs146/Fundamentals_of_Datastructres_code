#include<stdio.h>
struct sp
{
	int row,col,val;
};
void display(struct sp s[30])
{
	int i,j;
	printf("ROW	COLUMN    VALUE\n");
	for(i=0;i<s[0].val+1;i++)
	{
		printf("%d   	  %d         %d\n",s[i].row,s[i].col,s[i].val);
	}
}

void change(int m1[][10],int n,struct sp s[30])
{
	s[0].row=n;s[0].col=n;
	int c=0,k=1,i,j;
	for(i=0;i<(n);i++)
	{
		for(j=0;j<(n);j++)
		{
			if(m1[i][j]!=0)
			{
				s[k].row=i;s[k].col=j;s[k].val=m1[i][j];k++;c++;
			}
		}
	}
	s[0].val=c;
	display(s);
}

void stra(struct sp s[30])
{
	int i,j,k=1;
	struct sp p[30];
	p[0].row=s[0].col;p[0].col=s[0].row;p[0].val=s[0].val;
	for(i=0;i<s[0].col;i++)
	{
		for(j=1;j<s[0].val+1;j++)
		{
			if(i==s[j].col)
			{
				p[k].row=s[j].col;
				p[k].col=s[j].row;
				p[k].val=s[j].val;k++;
			}
		}
	}
	display(p);
}

void input(int m1[][10],int *n)
{
	int i,j;
	printf("enter the order of square matrix \n");
	scanf("%d",n);
	printf("enter the elements of the matrix \n");
	for(i=0;i<(*n);i++)
	{
		for(j=0;j<(*n);j++)
		{
			scanf("%d",&m1[i][j]);
		}
	}

}


void ftra(struct sp s[30])
{
	int m,n,t,i,coln,loc;
	struct sp p[30];
	m=s[0].row;n=s[0].col;t=s[0].val;
	p[0].row=m;p[0].col=n;p[0].val=t;
	int ss[n],tt[n];
	for(i=0;i<n;i++)
		ss[i]=0;
	for(i=1;i<=t;i++)
	{
		coln=s[i].col;
		ss[coln]++;
	}
	tt[0]=1;
	for(i=1;i<n;i++)
		tt[i]=tt[i-1]+ss[i-1];
	for(i=1;i<=t;i++)
	{
		coln=s[i].col;
		loc=tt[coln];
		p[loc].row=s[i].col;
		p[loc].col=s[i].row;
		p[loc].val=s[i].val;
		tt[coln]++;
	}
	display(p);
}
void add(struct sp s[30])
{
	printf("_______MATRIX 2______\n");
	int m1[10][10],q,r1,c1,v1,r2,c2,v2,i,j,cc=0,k=1;
	struct sp p[30],ad[30];
	input(m1,&q);
	change(m1,q,p);
	ad[0].row=s[0].row;ad[0].col=s[0].col;
	r1=s[0].row;c1=s[0].col;v1=s[0].val;
	r2=p[0].row;c2=p[0].col;v2=p[0].val;
	for(i=1;i<=v1;)
	{
		for(j=1;j<=v2;)
		{
			if(s[i].row==p[j].row)
			{
				if(s[i].col==p[j].col)
				{ad[k].row=s[i].row;ad[k].col=s[i].col;ad[k].val=s[i].val+p[j].val;i++;j++;k++;cc++;}
				else if(s[i].col<p[j].col)
				{ad[k].row=s[i].row;ad[k].col=s[i].col;ad[k].val=s[i].val;i++;k++;cc++;}
				else if(s[i].col>p[j].col)
				{ad[k].row=p[j].row;ad[k].col=p[j].col;ad[k].val=p[j].val;j++;k++;cc++;}
			}
			else if(s[i].row<p[j].row)
			{
				ad[k].row=s[i].row;ad[k].col=s[i].col;ad[k].val=s[i].val;i++;k++;cc++;
			}
			else if(s[i].row>p[j].row)
			{ad[k].row=p[j].row;ad[k].col=p[j].col;ad[k].val=p[j].val;j++;k++;cc++;}
		}
	}
	ad[0].val=cc;
	printf("ADDITION\n");
	display(ad);
}
int main()
{
	struct sp s[30];
	int m1[10][10],n=0,flag=1,x;
	while(flag)
	{
		printf("which operation you want to perform\n1.INPUT\n2.CONVERT INTO SPARSE MATRIx\n3.ADDITION\n4.SIMPLE TRANSPOSE\n5.FAST TRANSPOSE\n");
		scanf("%d",&x);
		switch(x)
		{
			case 1:input(m1,&n);break;
			case 2:change(m1,n,s);break;
			case 3:add(s);break;
			case 4:stra(s);break;
			case 5:ftra(s);break;
		}
		printf("you want to continue press 1 ohter wise 0\n");
		scanf("%d",&flag);
	}

}
