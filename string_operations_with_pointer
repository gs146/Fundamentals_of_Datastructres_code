#include<stdio.h>
#include<stdlib.h>

void palindrome(char *a,int l)
{
  int i,cnt=0,t=l;
  if(l%2==0)
  l=l/2;
  else
  l=l/2+1;

  for(i=0;i<l;i++)
  {
    if(*(a+i)!=*(a+t-i-1))
    cnt++;
  }

    if(cnt==0)
    printf("\n%s IS A PALINDROME\n",a);
    else
    printf("\n%s IS NOT A PALINDROME\n",a);
}

void reverse(char *a,int len)
{
  int i;
  printf("\nREVERSE OF A STRING IS:");

  for(i=len-1;*(a+i)!='\0';i--)
  printf("%c",*(a+i));

}

void compare(char *a,char *b,int l1,int l2)
{
  int i,flag=0,k=0,j=0;

  while(k<l1 || j<l2)
  {
	if(*(a+k) == *(b+j))
	{
	   k++;j++;
	}
	else
	{
 	   printf("STRINGS ARE NOT SAME\n");
	   flag=1;
	   break;
	}

  }
  if(flag==0)
  printf("STRINGS ARE SAME\n");
}

void str_copy(char *a, char *b,int l1,int l2)
{
	int i,j;

	for(i=0;*(b+i)!='\0';i++)
	{
	  *(a+i)=*(b+i);
	}
	printf("\nUPDATED STRING IS:");
	*(a+i)='\n';

    for(j=0;*(a+j)!='\n';j++)
    printf("%c",*(a+j));
}

void substring(char *a,char *b,int l1,int l2)
{
    int i=0,j=0,flag;
   for (i = 0; i <= l1-l2; i++)
    {
        for (j = i; j < i + l2; j++)
        {
            flag = 1;
            if (*(a+j) != *(b+j-i))
            {
                flag = 0;
                break;
            }
        }
        if (flag == 1)
            break;
    }
    if (flag == 1)
        printf("\nSEARCH SUCCESSFUL! AND SUB-STRING FOUND AT LOCATION %d",i+1);
    else
        printf("\nSEARCH UNSUCCESSFUL!");

}

void concat(char *a,char *b, int l1, int l2)
{
    int i=0,j;
    while(a[i]!='\0')
        i++;

  	for(j=0;b[j]!='\0';j++)
    {
        a[i+j]=b[j];
    }
    a[i+j]='\n';
    printf("\nCONCATENATED STRING IS:");
    for(j=0;a[j]!='\n';j++)
    printf("%c",a[j]);
}

int main()
{
    int ch,len,i,len1;
    char *word,*b;

    do
    {
    len=0;
    len1=0;
    word = (char*)malloc(sizeof(char)*50);              //allocation of memory
    b = (char*)malloc(sizeof(char)*50);
    printf("\n\nENTER A STRING: ");
	scanf("%s",word);

	for(i=0;*(word+i)!='\0';i++)
 	len++;

 	word = (char*)realloc(word, (len+1)*sizeof(char));  //reallocation of memory
	printf("\nLENGTH: %d %s\n",len,word);
    printf("\n---------------------\n");
	printf("\n---STRING MANIPULATION OPERATIONS---\n\n");
	printf("1.PALINDROME\n2.REVERSE\n3.COMPARE TWO STRINGS\n4.STRING COPY\n5.SUBSTRING\n6.STRING CONCATENATION\n\nENTER YOUR CHOICE:");
	scanf("%d",&ch);

	switch(ch)
	{
		case 1:	palindrome(word,len);
				break;

		case 2:	reverse(word,len);
				break;

		case 3:	printf("ENTER THE STRING TO BE COMPARED:");
				scanf("%s",b);
				for(i=0;*(b+i)!='\0';i++)
                len1++;
				b = (char*)realloc(b, (len1+1)*sizeof(char));
				compare(word,b,len,len1);
				break;

		case 4:	printf("ENTER STRING TO BE COPIED:");
				scanf("%s",b);
				for(i=0;*(b+i)!='\0';i++)
                len1++;
				b = (char*)realloc(b, (len1+1)*sizeof(char));
				str_copy(word,b,len,len1);
				break;

		case 5: printf("ENTER THE STRING TO BE CHECKED:");
                scanf("%s",b);
                for(i=0;*(b+i)!='\0';i++)
                len1++;
				b = (char*)realloc(b, (len1+1)*sizeof(char));
                substring(word,b,len,len1);
                break;

        case 6: printf("ENTER THE STRING TO ADD:");
                scanf("%s",b);
                for(i=0;*(b+i)!='\0';i++)
                len1++;
				b = (char*)realloc(b, (len1+1)*sizeof(char));
                concat(word,b,len,len1);
                break;
	}
	}while(ch!=0);

	return 0;
}

